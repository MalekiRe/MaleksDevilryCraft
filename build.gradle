plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
repositories {
    // uncomment to publish to the local maven
    // mavenLocal()
    maven { url = "https://hephaestus.dev/release" }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
    maven { url 'https://jitpack.io' }
    repositories {
        maven {
            name = 'Ladysnake Mods'
            url = 'https://ladysnake.jfrog.io/artifactory/mods'
        }
    }
}
dependencies {

    // Replace modImplementation with modApi if you expose components in your own API

    modImplementation "io.github.onyxstudios:Cardinal-Components-API:2.8.2"
    // Includes Cardinal Components API as a Jar-in-Jar dependency (optional)
    include "io.github.onyxstudios:Cardinal-Components-API:2.8.2"
    //to change the versions see the gradle.properties file
    implementation files('libs/minecraft_effekseer_implementation-1.0-SNAPSHOT-dev.jar')
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    modImplementation "dev.monarkhes:myron:1.6.0"
    include "dev.monarkhes:myron:1.6.0"
    compileOnly "org.apiguardian:apiguardian-api:1.0.0"
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modApi ("grondag:frex-${project.mc_tag}:${project.frex_version}.+") { transitive = false}
    // remove next line if you want JMX to be an optional dependency
    include "grondag:frex-${project.mc_tag}:${project.frex_version}.+"

    modImplementation ("grondag:jmx-${project.mc_tag}:${project.jmx_version}.+") { transitive = false}
    // remove next line if you want JMX to be an optional dependency
    include "grondag:jmx-${project.mc_tag}:${project.jmx_version}.+"
    modImplementation ('com.github.qouteall.ImmersivePortalsMod:imm_ptl_core:1.16-SNAPSHOT'){
        exclude(group: "net.fabricmc.fabric-api")
    }
    include 'com.github.qouteall.ImmersivePortalsMod:imm_ptl_core:1.16-SNAPSHOT'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()

    }
}
